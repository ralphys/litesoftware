#!/bin/bash
#-----------------------------------------------------------------------------------------
# Name: Linux Lite Updates
# Description: A GUI tool to easily install Updates in Linux Lite.
# Authors: Misko_2083, Jerry Bezencon, gerito1, Ralphy
# Website: https://www.linuxliteos.com
#-----------------------------------------------------------------------------------------

# Kill off any package managers that may be running
if [ "$(pidof synaptic)" ]
then
   killall -9 synaptic
fi

if [ ! -z "$(pgrep gdebi-gtk)" ]
then
   killall -9 gdebi-gtk
fi

# Upgrade will not install all packages if /var/lib/dpkg/lock file exists
test -e ["/var/lib/dpkg/lock"] || rm -rf /var/lib/dpkg/lock

# Check Internet access
if eval "curl -sk google.com" >> /dev/null 2>&1; then
  :  # continue - internet connection check passed
else # Prompt ERROR internet connection check failed and exit
    (zenity --info --width=320 --height=120 --ok-label="Got it!" --title="  Lite Updates - No Internet connection detected..." \
            --text="\n<b>Your computer does not seem to be connected to the internet</b> \n \nLinux Lite cannot check for updates. \nPlease check your Internet connection and try again." --no-wrap)
        exit 0
fi

APPNAME="Linux Lite Updates"                # Application name variable
ic="/usr/share/icons/zenity-llcc.png"       # Linux Lite icon variable
UPDATES=$(mktemp /tmp/updateslist.XXXXXX)   # Updates log variable
DATE=$(date +"%A-%d-%B-%Y-%T")              # Date variable

# Script start - Ask for elevation, else exit
if [ $EUID -ne 0 ]; then
   zenity --question --width=320 --height=100 --window-icon=$ic --ok-label="Continue" --cancel-label="Cancel" --title="  $APPNAME" \
       --text="\n$APPNAME will now fetch the Updates list\n\nClick <b>Cancel</b> to exit now or <b>Continue</b> to proceed."
   case $? in
      0) gksu -m '
  <b>Install Updates requires Administrative privileges</b>


            Please enter your password to continue.' "bash $0"
         exit
         ;;
      1) exit
   esac
fi

if [ "$?" -eq "0" ];then
  APTUPDATE=$(grep '^deb' -c /etc/apt/sources.list) # Total of repositories registered, this is approximated
  apt-get update 2>&1 | awk -v total=$APTUPDATE '/^Ign|^ Get/{count++;$1=""} FNR { if (total != 0){percentage=int (1000*count/total);print (percentage < 90?percentage:99),"\n#",substr($0, 0, 128) }; fflush(stdout)}' \
    | zenity --progress --text="Updating package lists..." --window-icon=$ic --title="Updating Software Sources - please wait..." --percentage=0 --no-cancel --pulsate --auto-close --width=600
      if [ "${PIPESTATUS[0]}" -ne "0" ]; then
          unset APTUPDATE
          rm $UPDATES
          unset UPDATES
          zenity --error --width=290 --height=60 --title="  $APPNAME - Error" \
                 --text="\n$APPNAME couldn't fetch the package cache information lists.\n\nCannot check for updates!"
          exit 1
      fi
  unset APTUPDATE

# Creates a list in /tmp/updateslist
  apt-get --just-print dist-upgrade 2>&1 | perl -ne 'if (/Inst\s([\w,\-,\d,\.,~,:,\+]+)\s\[([\w,\-,\d,\.,~,:,\+]+)\]\s\(([\w,\-,\d,\.,~,:,\+]+)\)? /i) {print "Name: $1 INSTALLED: $2 AVAILABLE: $3\n"}' | awk '{print NR,":\t"$0}' | tee $UPDATES

# Check if updates are available, if there are none, remove /tmp/updateslist.XXXXXX and pop up a 'your system is up-to-date. Available' dialog
  if [  -z "$(cat $UPDATES)"  ]; then
    rm $UPDATES
    unset UPDATES
    zenity --info --window-icon=$ic  --width=180 --height=60 --title="  $APPNAME" \
           --text="\nYour system is up to date."
    exit 0
  fi

# Insert text into  /tmp/updateslist.XXXXXX
  sed -i -e '1 i\       List of available Updates' -e '1 i\       -----------------------------------' -e '1 i\       Click "Update Now" to install the updates listed below or "Cancel" to exit now\n'  $UPDATES

# Erase existing available info
  dpkg --clear-avail
  else
    rm $UPDATES
    unset UPDATES
    exit 0
  fi

# Call the zenity dialog to show update list
zenity --text-info --ok-label="Update Now" --cancel-label="Cancel" --title="  $APPNAME" --width=750 --height=340 --filename="$UPDATES"
      if [ "$?" -eq "0" ];then
        # Continue script if no halt and Remove tmp file and unset variables
        rm $UPDATES
        unset UPDATES

#Begin upgrade
DEBIAN_FRONTEND=noninteractive apt-get  -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade -y  2>&1 | tee /var/log/llupdates.log | awk ' BEGIN { FS=" "; total=1;end_download=0} /upgraded/ {total= $1 + $3;FS="[ :]" } /^Get:[[:digit:]]+/ {printf "#Downloading %s %s %s\n",$7,$(NF-1),$NF;print int(($2 - 1) * 100 / total); fflush(stdout)} /^\(Reading / {if (end_download==0){print 100;fflush(stdout);end_download=1}} /^(Preparing|Unpacking|Selecting|Processing|Setting|Download)/ {print "#", substr($0, 0, 128); fflush(stdout)}' \
    | ( zenity --window-icon=$ic --progress --width=600 --text="Downloading package(s)...\nThis may take a while." --title="Downloading - please wait..." --percentage=0 --no-cancel --auto-close ; zenity --progress --window-icon=$ic --width=600 --text="Installing and configuring packages...\nThis may take a while." --title="Installing - please wait..." --no-cancel --pulsate --auto-close )

      if [ "${PIPESTATUS[0]}" -ne "0" ]; then
         zenity --error --width=240 --height=60 --title="  $APPNAME - Error" \
                --text="$APPNAME have failed. For more information refer to: \n \n/var/log/llupdates.log"
         exit 0
      fi
      # Halt updates script if user selects Cancel
      else
         rm $UPDATES
         unset UPDATES
         zenity --info --width=200 --timeout=3 --window-icon="$ic" --title="  $APPNAME" --text="\nUpdates have been canceled."
         exit 0
    fi

    PROCEED=$(zenity --question --width=300 --height=80 --title=" $APPNAME" --window-icon="$ic" --text="\n$APPNAME completed successfully!\n\nWould you like to view the $APPNAME log?"; echo $?)
    if [ ${PROCEED} -eq 1 ]; then
        continue
    else
      zenity --text-info --cancel-label="Quit" --ok-label="Save"  --title=" $APPNAME - Log" --width=650 --height=340 --filename="/var/log/llupdates.log"
          if [ $? -eq 0 ]; then
            # Save report
            szSavePath=$(zenity --title="    Save log" --width=550 --height=380 --file-selection --filename=llupdates-"${DATE}".txt --file-filter='*.txt' --file-filter='All files | *' --save --confirm-overwrite)
            sudo -u ${SUDO_USER:-$USER} cp /var/log/llupdates.log $szSavePath
          else
          continue
          fi
    fi
    if [ -s /var/run/reboot-required ]; then
        zenity --question --ok-label="Reboot now !" --cancel-label="Continue using my system" --title=" $APPNAME - Reboot required" --width=300 --height=100 \
               --text="\nPrevious updates require rebooting the system for changes to take effect.\n\n          Would you like to reboot now?"
            if [ "$?" -eq "0" ]; then
                reboot
            else
              exit
            fi
    fi
exit 0